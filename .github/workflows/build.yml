name: Build FFmpeg with Nvidia Acceleration

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release Tag (e.g., v1.0.0 or a date)'
        required: false
  schedule:
    - cron: '0 0 */14 * 1' # Runs every other Monday at 00:00 UTC

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git nvidia-cuda-toolkit nvidia-cuda-dev libva-dev zip

      - name: Cache ffmpeg-build-script
        id: cache-build-script
        uses: actions/cache@v3
        with:
          path: ffmpeg-build-script
          key: ffmpeg-build-script-${{ github.sha }}

      - name: Clone ffmpeg-build-script
        if: steps.cache-build-script.outputs.cache-hit != 'true'
        run: git clone https://github.com/markus-perl/ffmpeg-build-script.git

      - name: Build FFmpeg
        working-directory: ffmpeg-build-script
        run: |
          CUDA_COMPUTE_CAPABILITY=75 SKIPINSTALL=yes ./build-ffmpeg --enable-gpl-and-non-free --build --full-static

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-binaries
          path: ffmpeg-build-script/workspace/bin/*

      - name: Create Release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: FFmpeg Binaries ${{ github.event.inputs.tag_name }}
          body: |
            Pre-built FFmpeg binaries with Nvidia hardware acceleration.

      - name: Archive Binaries for Release
        if: steps.create_release.outputs.upload_url != ''
        run: |
          cd ffmpeg-build-script/workspace
          zip -r ffmpeg-bin.zip bin

      - name: Upload Release Asset
        if: steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ffmpeg-build-script/workspace/ffmpeg-bin.zip
          asset_name: ffmpeg-bin.zip
